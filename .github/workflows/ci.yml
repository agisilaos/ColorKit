name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [ main ]

# Ensure we don't run on draft PRs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Build and Test
    runs-on: macos-15 # Latest macOS runner with Xcode 16.2
    if: github.event.pull_request.draft == false

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_16.2.app

    # Set up caching of Swift package dependencies
    - name: Cache SPM dependencies
      uses: actions/cache@v4
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-

    # Set up build cache
    - name: Cache Build
      uses: actions/cache@v4
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-derived-data-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-derived-data-

    - name: Setup iOS Simulator
      run: |
        # Get runtime identifier
        RUNTIME_ID=$(xcrun simctl list runtimes iOS -j | jq -r '.runtimes[0].identifier')
        echo "Using runtime: $RUNTIME_ID"
        
        # Create and boot simulator
        DEVICE_ID=$(xcrun simctl create "iPhone 16 Pro" com.apple.CoreSimulator.SimDeviceType.iPhone-16-Pro $RUNTIME_ID)
        xcrun simctl boot $DEVICE_ID
        
        # Wait for simulator to be ready
        xcrun simctl list devices | grep "iPhone 16 Pro"
        
        echo "SIMULATOR_DEVICE_ID=$DEVICE_ID" >> $GITHUB_ENV

    - name: Build and Test iOS
      run: |
        xcodebuild test \
          -scheme ColorKit \
          -destination "id=$SIMULATOR_DEVICE_ID" \
          -parallel-testing-enabled YES \
          -parallel-testing-worker-count 4 \
          -derivedDataPath ~/Library/Developer/Xcode/DerivedData \
          -enableCodeCoverage YES \
          | xcpretty && exit ${PIPESTATUS[0]}

    - name: Build and Test macOS
      run: |
        xcodebuild test \
          -scheme ColorKit \
          -destination 'platform=macOS,arch=arm64' \
          -parallel-testing-enabled YES \
          -parallel-testing-worker-count 4 \
          -derivedDataPath ~/Library/Developer/Xcode/DerivedData \
          -enableCodeCoverage YES \
          | xcpretty && exit ${PIPESTATUS[0]}

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: success() || failure() # Upload even if tests fail
      with:
        name: test-results
        path: |
          ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult
        retention-days: 5 